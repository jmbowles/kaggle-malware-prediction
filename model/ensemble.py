from __future__ import print_function
"""

https://www.kdnuggets.com/2017/02/stacking-models-imropved-predictions.html
https://mlwave.com/kaggle-ensembling-guide/

"""
from pyspark.sql.types import DoubleType
from pyspark.ml import PipelineModel

import pyspark.sql.functions as F
from pyspark.sql import SparkSession

csv_path = "output/submit/submittal_8.csv"

spark = SparkSession.builder.appName("EnsembleSubmittal") \
	.config("spark.dynamicAllocation.enabled", "true") \
	.config("spark.shuffle.service.enabled", "true") \
	.config("spark.serializer", "org.apache.spark.serializer.KryoSerializer") \
	.enableHiveSupport() \
	.getOrCreate()


def transform(df, model_path, prediction_column):
	pipeline_model = PipelineModel.load(model_path)
	predictions = pipeline_model.transform(df)
	predictions = predictions.withColumnRenamed("prediction", prediction_column)
	return predictions


print("Loading and Caching Data")
df = spark.read.table("test")
df.cache()

print("Transforming Model Predictions")
predictions = transform(df, "output/logistic_pipeline_model", "logistic_prediction")
predictions = transform(predictions, "output/naive_bayes_pipeline_model", "bayes_prediction")
predictions = transform(predictions, "output/gradient_boosted_pipeline_model", "boosted_prediction")
predictions = transform(predictions, "output/perceptron_pipeline_model", "perceptron_prediction")
predictions = transform(predictions, "output/forest_pipeline_model", "forest_prediction")
predictions = transform(predictions, "output/one_rest_pipeline_model", "onerest_prediction")

