from __future__ import print_function
"""

"""
import numpy as np
import pandas as pd

import pyspark.sql.functions as F
from pyspark.sql import SparkSession
from pyspark.sql.types import StructType, StructField, StringType


spark = SparkSession.builder \
	.appName("TimeSeries") \
	.config("spark.sql.execution.arrow.enabled", "true") \
	.config("spark.dynamicAllocation.enabled", "true") \
	.config("spark.shuffle.service.enabled", "true") \
	.config("spark.serializer", "org.apache.spark.serializer.KryoSerializer") \
	.enableHiveSupport() \
	.getOrCreate()

sig = np.load('../datasets/AvSigVersionTimestamps.npy')[()]
pdf = pd.concat([pd.DataFrame([(k, v.isoformat())], columns=['AvSigVersion', 'AvSigVersionDate']) for _, (k, v) in enumerate(sig.items())], ignore_index=True)

schema = StructType([StructField("AvSigVersion", StringType(), False), StructField("AvSigVersionDate", StringType(), False)])
df = spark.createDataFrame(pdf, schema)